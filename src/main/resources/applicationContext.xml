<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
       xmlns:dao="http://autodao.sourceforge.net/schemas/autodao-0.12"
       xmlns:tx="http://www.springframework.org/schema/tx"

       xsi:schemaLocation=
               "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                http://autodao.sourceforge.net/schemas/autodao-0.12 http://autodao.sourceforge.net/schemas/autodao-0.12.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
                http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd">

    <context:component-scan base-package="ru.simplex_software.smeta" />
    <dao:hibernateScan base-package="ru.simplex_software.smeta.dao" />
    <dao:hibernate interface="ru.simplex_software.smeta.dao.TaskDAO" id="taskDAO" />

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionFilter" class="ru.simplex_software.smeta.security.TransactionFilter" />

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:datasource.properties</value>
                <value>classpath:hibernate.properties</value>
                <value>classpath:oauth.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${datasource.driverClassName}" />
        <property name="jdbcUrl" value="${datasource.url}" />
        <property name="user" value="${datasource.username}" />
        <property name="password" value="${datasource.password}" />
        <property name="initialPoolSize" value="20" />
        <property name="maxIdleTime" value="10000" />
        <property name="maxPoolSize" value="40" />
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">

        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan">
            <list>
                <value>ru.simplex_software.smeta.model</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.validator.apply_to_ddl">hibernate.validator.apply_to_ddl</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <oauth:resource id="wrike" type="authorization_code"
                    client-id="${oauth.clientId}"
                    access-token-uri="${oauth.accessTokenUri}"
                    client-secret="${oauth.clientSecret}"
                    user-authorization-uri="${oauth.userAuthorizationUri}"
                    token-name="${oauth.tokenName}"
                    authentication-scheme="query"
                    client-authentication-scheme="${oauth.clientAuthenticationScheme}" />

    <bean id="restTemplate" class="org.springframework.security.oauth2.client.OAuth2RestTemplate">
        <constructor-arg name="resource" ref="wrike"/>
        <constructor-arg name="context" ref="oauth2ClientContext"/>
    </bean>

    <bean id="tokenServices" class="ru.simplex_software.smeta.security.UserInfoTokenServices">
        <constructor-arg name="clientId" value="${oauth.clientId}"/>
        <constructor-arg name="userInfoEndpointUrl" value="${oauth.userInfoUri}"/>
        <property name="restTemplate" ref="restTemplate" />
    </bean>

    <bean id="oAuth2ClientAuthenticationProcessingFilter"
          class="org.springframework.security.oauth2.client.filter.OAuth2ClientAuthenticationProcessingFilter">
        <constructor-arg value="/login"/>
        <property name="restTemplate" ref="restTemplate" />
        <property name="tokenServices" ref="tokenServices" />
    </bean>

    <bean id="wrikeTaskDAO" class="ru.simplex_software.smeta.dao.WrikeTaskDaoImpl" />

    <bean id="wrikeTasksLoader" class="ru.simplex_software.smeta.WrikeTasksLoaderService" />
</beans>